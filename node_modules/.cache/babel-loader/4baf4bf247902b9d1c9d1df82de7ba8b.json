{"ast":null,"code":"var _jsxFileName = \"/Users/kashita/Desktop/DB/db_project/frontend/src/components/TableRows.js\";\nimport TableRow from \"./TableRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TableRows = ({\n  processes,\n  running,\n  filters\n}) => {\n  return (\n    /*#__PURE__*/\n    // <tbody>\n    //   {runningProcesses.forEach(el => (\n    //     <tr>\n    //       <td>{el.startTime}</td>\n    //     </tr>\n    //   ))}\n    // </tbody>\n    _jsxDEV(\"tbody\", {\n      children: processes.map((process, index) => {\n        let show = true;\n        console.log(process.startTime);\n\n        if (filters.processId > 0 && process.processId !== filters.processId) {\n          show = false;\n        }\n\n        if (filters.serverId > 0 && process.serverId !== filters.serverId) {\n          show = false;\n        }\n\n        if (filters.processName !== \"\" && process.processName !== filters.processName) {\n          show = false;\n        }\n\n        if (filters.serverName !== \"\" && process.serverName !== filters.serverName) {\n          show = false;\n        }\n\n        if (filters.status !== \"\" && process.status !== filters.status) {\n          show = false;\n        }\n\n        if (show) {\n          return /*#__PURE__*/_jsxDEV(TableRow, {\n            process: process,\n            running: running\n          }, process.processId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this);\n        }\n\n        return \"\"; // <TableRow process={process} index={index} running={running} />\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_c = TableRows;\nexport default TableRows;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableRows\");","map":{"version":3,"sources":["/Users/kashita/Desktop/DB/db_project/frontend/src/components/TableRows.js"],"names":["TableRow","TableRows","processes","running","filters","map","process","index","show","console","log","startTime","processId","serverId","processName","serverName","status"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,KAAqC;AACrD;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA,gBACGF,SAAS,CAACG,GAAV,CAAc,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACjC,YAAIC,IAAI,GAAG,IAAX;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAO,CAACK,SAApB;;AACA,YAAIP,OAAO,CAACQ,SAAR,GAAoB,CAApB,IAAyBN,OAAO,CAACM,SAAR,KAAsBR,OAAO,CAACQ,SAA3D,EAAsE;AACpEJ,UAAAA,IAAI,GAAG,KAAP;AACD;;AACD,YAAIJ,OAAO,CAACS,QAAR,GAAmB,CAAnB,IAAwBP,OAAO,CAACO,QAAR,KAAqBT,OAAO,CAACS,QAAzD,EAAmE;AACjEL,UAAAA,IAAI,GAAG,KAAP;AACD;;AACD,YACEJ,OAAO,CAACU,WAAR,KAAwB,EAAxB,IACAR,OAAO,CAACQ,WAAR,KAAwBV,OAAO,CAACU,WAFlC,EAGE;AACAN,UAAAA,IAAI,GAAG,KAAP;AACD;;AACD,YACEJ,OAAO,CAACW,UAAR,KAAuB,EAAvB,IACAT,OAAO,CAACS,UAAR,KAAuBX,OAAO,CAACW,UAFjC,EAGE;AACAP,UAAAA,IAAI,GAAG,KAAP;AACD;;AACD,YAAIJ,OAAO,CAACY,MAAR,KAAmB,EAAnB,IAAyBV,OAAO,CAACU,MAAR,KAAmBZ,OAAO,CAACY,MAAxD,EAAgE;AAC9DR,UAAAA,IAAI,GAAG,KAAP;AACD;;AACD,YAAIA,IAAJ,EAAU;AACR,8BACE,QAAC,QAAD;AAEE,YAAA,OAAO,EAAEF,OAFX;AAGE,YAAA,OAAO,EAAEH;AAHX,aACOG,OAAO,CAACM,SADf;AAAA;AAAA;AAAA;AAAA,kBADF;AAOD;;AACD,eAAO,EAAP,CAjCiC,CAkCjC;AACD,OAnCA;AADH;AAAA;AAAA;AAAA;AAAA;AATF;AAgDD,CAjDD;;KAAMX,S;AAmDN,eAAeA,SAAf","sourcesContent":["import TableRow from \"./TableRow\";\n\nconst TableRows = ({ processes, running, filters }) => {\n  return (\n    // <tbody>\n    //   {runningProcesses.forEach(el => (\n    //     <tr>\n    //       <td>{el.startTime}</td>\n    //     </tr>\n    //   ))}\n    // </tbody>\n\n    <tbody>\n      {processes.map((process, index) => {\n        let show = true;\n        console.log(process.startTime);\n        if (filters.processId > 0 && process.processId !== filters.processId) {\n          show = false;\n        }\n        if (filters.serverId > 0 && process.serverId !== filters.serverId) {\n          show = false;\n        }\n        if (\n          filters.processName !== \"\" &&\n          process.processName !== filters.processName\n        ) {\n          show = false;\n        }\n        if (\n          filters.serverName !== \"\" &&\n          process.serverName !== filters.serverName\n        ) {\n          show = false;\n        }\n        if (filters.status !== \"\" && process.status !== filters.status) {\n          show = false;\n        }\n        if (show) {\n          return (\n            <TableRow\n              key={process.processId}\n              process={process}\n              running={running}\n            />\n          );\n        }\n        return \"\";\n        // <TableRow process={process} index={index} running={running} />\n      })}\n    </tbody>\n  );\n};\n\nexport default TableRows;\n"]},"metadata":{},"sourceType":"module"}