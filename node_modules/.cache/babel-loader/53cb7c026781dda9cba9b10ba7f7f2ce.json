{"ast":null,"code":"var _jsxFileName = \"/Users/kashita/Desktop/DB/db_project/frontend/src/components/Filters.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Filters = ({\n  processes,\n  filterProcesses,\n  processNames,\n  serverNames\n}) => {\n  _s();\n\n  const [processName, setProcessName] = useState(\"\");\n  const [serverName, setServerName] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n\n  const applyFilters = e => {\n    e.preventDefault();\n\n    if (serverName === \"\" && processName === \"\" && status === \"\" && startDate === \"\" && endDate === \"\") {\n      alert(\"Please select a filter\");\n      return;\n    }\n\n    console.log(serverNames, processNames);\n    filterProcesses(processName, serverName, status, startDate, endDate);\n  };\n\n  const handleReset = e => {\n    setProcessName(\"\");\n    setServerName(\"\");\n    setStatus(\"\");\n    setStartDate(\"\");\n    setEndDate(\"\");\n    filterProcesses(\"\", \"\", \"\", \"\", \"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"exampleForm.ControlSelect1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"form-label\",\n            children: \"Process Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            onChange: e => setProcessName(e.target.value),\n            value: processName,\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), processNames && processNames.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n              children: p.processName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 41\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"exampleForm.ControlSelect1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Server Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            onChange: e => setServerName(e.target.value),\n            value: serverName,\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), serverNames && serverNames.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n              children: s.serverName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 40\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"date\",\n            onChange: e => setStartDate(e.target.value),\n            value: startDate,\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"End Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"date\",\n            onChange: e => setEndDate(e.target.value),\n            value: endDate,\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"exampleForm.ControlSelect1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Process Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            onChange: e => setStatus(e.target.value),\n            value: status,\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Failed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"In Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Stopped\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"custom-btn-primary\",\n        variant: \"outline-primary\",\n        type: \"submit\",\n        onClick: applyFilters,\n        children: \"Apply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n        className: \"custom-btn custom-btn-secondary\",\n        variant: \"outline-danger\",\n        onClick: handleReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Filters, \"NSKBQJjfsgooxN7WdjafKBm88zM=\");\n\n_c = Filters;\nexport default Filters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"sources":["/Users/kashita/Desktop/DB/db_project/frontend/src/components/Filters.js"],"names":["React","Form","Button","Col","useState","Filters","processes","filterProcesses","processNames","serverNames","processName","setProcessName","serverName","setServerName","status","setStatus","startDate","setStartDate","endDate","setEndDate","applyFilters","e","preventDefault","alert","console","log","handleReset","target","value","map","p","s"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport { useState } from \"react\";\n\nconst Filters = ({ processes, filterProcesses, processNames, serverNames }) => {\n  const [processName, setProcessName] = useState(\"\");\n  const [serverName, setServerName] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n\n  const applyFilters = (e) => {\n    e.preventDefault();\n    if (\n      serverName === \"\" &&\n      processName === \"\" &&\n      status === \"\" &&\n      startDate === \"\" &&\n      endDate === \"\"\n    ) {\n      alert(\"Please select a filter\");\n      return;\n    }\n    console.log(serverNames, processNames);\n    filterProcesses(processName, serverName, status, startDate, endDate);\n  };\n\n  const handleReset = (e) => {\n    setProcessName(\"\");\n    setServerName(\"\");\n    setStatus(\"\");\n    setStartDate(\"\");\n    setEndDate(\"\");\n    filterProcesses(\"\", \"\", \"\", \"\", \"\");\n  };\n\n  return (\n    <div className=\"form-container\">\n      {/* <h2>Filters</h2> */}\n      <Form>\n        <Form.Row className=\"form\">\n          <Form.Group as={Col} controlId=\"exampleForm.ControlSelect1\">\n            <Form.Label className=\"form-label\">Process Name</Form.Label>\n            <Form.Control\n              as=\"select\"\n              onChange={(e) => setProcessName(e.target.value)}\n              value={processName}\n              className=\"form-control\"\n            >\n              <option></option>\n              {processNames &&\n                processNames.map((p) => <option>{p.processName}</option>)}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group as={Col} controlId=\"exampleForm.ControlSelect1\">\n            <Form.Label>Server Name</Form.Label>\n            <Form.Control\n              as=\"select\"\n              onChange={(e) => setServerName(e.target.value)}\n              value={serverName}\n              className=\"form-control\"\n            >\n              <option></option>\n              {serverNames &&\n                serverNames.map((s) => <option>{s.serverName}</option>)}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group as={Col}>\n            <Form.Label>Start Date</Form.Label>\n            <Form.Control\n              type=\"date\"\n              onChange={(e) => setStartDate(e.target.value)}\n              value={startDate}\n              className=\"form-control\"\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group as={Col}>\n            <Form.Label>End Date</Form.Label>\n            <Form.Control\n              type=\"date\"\n              onChange={(e) => setEndDate(e.target.value)}\n              value={endDate}\n              className=\"form-control\"\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group as={Col} controlId=\"exampleForm.ControlSelect1\">\n            <Form.Label>Process Status</Form.Label>\n            <Form.Control\n              as=\"select\"\n              onChange={(e) => setStatus(e.target.value)}\n              value={status}\n              className=\"form-control\"\n            >\n              <option></option>\n              <option>Completed</option>\n              <option>Failed</option>\n              <option>In Progress</option>\n              <option>Stopped</option>\n            </Form.Control>\n          </Form.Group>\n        </Form.Row>\n        <Form.Row></Form.Row>\n        <Form.Row></Form.Row>\n        <Button\n          className=\"custom-btn-primary\"\n          variant=\"outline-primary\"\n          type=\"submit\"\n          onClick={applyFilters}\n        >\n          Apply\n        </Button>{\" \"}\n        <Button\n          className=\"custom-btn custom-btn-secondary\"\n          variant=\"outline-danger\"\n          onClick={handleReset}\n        >\n          Reset\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default Filters;\n"]},"metadata":{},"sourceType":"module"}