{"ast":null,"code":"var _jsxFileName = \"/Users/kashita/Desktop/DB/db_project/frontend/src/components/StartProcess.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { DropdownButton, Dropdown, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport authHeader from \"../auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StartProcess = ({\n  details\n}) => {\n  _s();\n\n  const [server, setServer] = useState(\"Select Server\");\n  const [process, setProcess] = useState(\"Select Process\");\n\n  const handleSelectServer = e => {\n    setServer(e);\n  };\n\n  const handleSelectProcess = e => {\n    setProcess(e);\n  };\n\n  const onSubmit = e => {\n    console.log(\"clicked\");\n    e.preventDefault();\n\n    if (server === \"Select Server\" || process === \"Select Process\") {\n      alert(\"please select server and process\");\n      return;\n    }\n\n    console.log(`from on submit server- ${server}`);\n    console.log(`from on submit process- ${process}`);\n    axios.post(\"http://localhost:4000/api/server/processes/start\", {\n      pname: process,\n      sname: server\n    }, {\n      headers: authHeader()\n    }).then(res => {\n      alert(\"res from startprocess in frontend process started succesfully\");\n      console.log(`from on submit server- ${server}`);\n      console.log(`from on submit process- ${process}`);\n      console.log(\"res from startprocess in frontend process started succesfully\");\n    }).catch(err => {\n      alert(\"failed to start process\");\n    });\n    setServer(\"Select Server\");\n    setProcess(\"Select Process\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-inline mx-auto d-inline-flex\",\n        style: {\n          alignContent: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-inline pt-4 ml-5 mr-2\",\n          children: /*#__PURE__*/_jsxDEV(DropdownButton, {\n            title: server,\n            value: server,\n            children: details.map((data, index) => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              title: data.server,\n              eventKey: data.server,\n              onSelect: handleSelectServer,\n              children: data.server\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-inline pt-4 mr-2\",\n          children: /*#__PURE__*/_jsxDEV(DropdownButton, {\n            className: \"custom-dd-button\",\n            title: process,\n            value: process,\n            children: details.filter(data => server === data.server).map(data => data.process.map((process, index) => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              title: process,\n              eventKey: process,\n              onSelect: handleSelectProcess,\n              children: process\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 21\n            }, this)))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-inline pt-4 \",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"custom-btn-primary\",\n            variant: \"primary\",\n            onClick: onSubmit,\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StartProcess, \"irr4P/8nzzXipRgVRJGCBL3s+p4=\");\n\n_c = StartProcess;\nexport default StartProcess;\n\nvar _c;\n\n$RefreshReg$(_c, \"StartProcess\");","map":{"version":3,"sources":["/Users/kashita/Desktop/DB/db_project/frontend/src/components/StartProcess.js"],"names":["React","useState","DropdownButton","Dropdown","Button","axios","authHeader","StartProcess","details","server","setServer","process","setProcess","handleSelectServer","e","handleSelectProcess","onSubmit","console","log","preventDefault","alert","post","pname","sname","headers","then","res","catch","err","alignContent","map","data","index","filter"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { DropdownButton, Dropdown, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport authHeader from \"../auth\";\n\nconst StartProcess = ({ details }) => {\n  const [server, setServer] = useState(\"Select Server\");\n  const [process, setProcess] = useState(\"Select Process\");\n\n  const handleSelectServer = (e) => {\n    setServer(e);\n  };\n\n  const handleSelectProcess = (e) => {\n    setProcess(e);\n  };\n\n  const onSubmit = (e) => {\n    console.log(\"clicked\");\n    e.preventDefault();\n\n    if (server === \"Select Server\" || process === \"Select Process\") {\n      alert(\"please select server and process\");\n      return;\n    }\n    console.log(`from on submit server- ${server}`);\n    console.log(`from on submit process- ${process}`);\n    axios\n      .post(\n        \"http://localhost:4000/api/server/processes/start\",\n        {\n          pname: process,\n          sname: server,\n        },\n        {\n          headers: authHeader(),\n        }\n      )\n      .then((res) => {\n        alert(\"res from startprocess in frontend process started succesfully\");\n        console.log(`from on submit server- ${server}`);\n        console.log(`from on submit process- ${process}`);\n        console.log(\n          \"res from startprocess in frontend process started succesfully\"\n        );\n      })\n      .catch((err) => {\n        alert(\"failed to start process\");\n      });\n\n    setServer(\"Select Server\");\n    setProcess(\"Select Process\");\n  };\n\n  return (\n    <div>\n      {/* <h3>Start Process</h3> */}\n      <div>\n        <form\n          className=\"form-inline mx-auto d-inline-flex\"\n          style={{ alignContent: \"center\" }}\n        >\n          <div className=\"form-inline pt-4 ml-5 mr-2\">\n            <DropdownButton title={server} value={server}>\n              {details.map((data, index) => (\n                <Dropdown.Item\n                  title={data.server}\n                  key={index}\n                  eventKey={data.server}\n                  onSelect={handleSelectServer}\n                >\n                  {data.server}\n                </Dropdown.Item>\n              ))}\n            </DropdownButton>\n          </div>\n\n          <div className=\"form-inline pt-4 mr-2\">\n            <DropdownButton\n              className=\"custom-dd-button\"\n              title={process}\n              value={process}\n            >\n              {details\n                .filter((data) => server === data.server)\n                .map((data) =>\n                  data.process.map((process, index) => (\n                    <Dropdown.Item\n                      title={process}\n                      key={index}\n                      eventKey={process}\n                      onSelect={handleSelectProcess}\n                    >\n                      {process}\n                    </Dropdown.Item>\n                  ))\n                )}\n            </DropdownButton>\n          </div>\n\n          <div className=\"form-inline pt-4 \">\n            <Button\n              className=\"custom-btn-primary\"\n              variant=\"primary\"\n              onClick={onSubmit}\n            >\n              Start\n            </Button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default StartProcess;\n"]},"metadata":{},"sourceType":"module"}