{"ast":null,"code":"var _jsxFileName = \"/Users/kashita/Desktop/DB/db_project/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"; //import Table from \"react-bootstrap/Table\";\n// import TableRows from \"./components/TableRows\";\n// import TableHead from \"./components/TableHead\";\n\nimport ProcessTable from \"./components/ProcessTable\";\nimport Filters from \"./components/Filters\";\nimport StartProcess from \"./components/StartProcess\";\nimport Login from \"./Login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const details = [{\n    server: \"scripts\",\n    process: [\"p1\", \"p2\", \"process1\"]\n  } // {\n  //   server: \"server2\",\n  //   process: [\"p1\", \"p2\", \"p3\"],\n  // },\n  // {\n  //   server: \"server3\",\n  //   process: [\"p1\", \"p4\"],\n  // },\n  ];\n  const runningProcesses = [{\n    startTime: \"04/19/17 04:34:22 +0000\",\n    serverName: \"CyberDust.internal\",\n    processName: \"query_tests\",\n    instanceID: 114,\n    Status: \"10\",\n    serverId: 1,\n    processId: 1,\n    status: \"Completed\"\n  }, {\n    startTime: \"05/23/17 04:34:22 +1200\",\n    serverName: \"Skynet.dedicated\",\n    processName: \"transaction_checks\",\n    instanceID: 4450,\n    Status: \"60\",\n    serverId: 2,\n    processId: 2,\n    status: \"Failed\"\n  }, {\n    startTime: \"14/06/17 04:34:22 +0000\",\n    serverName: \"Perplexed\",\n    processName: \"rollback_execute\",\n    instanceID: 8901,\n    Status: \"30\",\n    serverId: 3,\n    processId: 3,\n    status: \"In Progress\"\n  }, {\n    startTime: \"04/23/17 04:34:22 +1930\",\n    serverName: \"Grimlock.lantern\",\n    processName: \"deadlock_detect\",\n    instanceID: 1230,\n    Status: \"40\",\n    serverId: 4,\n    processId: 4,\n    status: \"Failed\"\n  }, {\n    startTime: \"04/23/17 04:34:22 +0800\",\n    serverName: \"CyberDust.internal\",\n    processName: \"data_parser\",\n    instanceID: 240,\n    Status: \"90\",\n    serverId: 5,\n    processId: 5,\n    status: \"Completed\"\n  }]; //fetched from database\n\n  const completedProcesses = [{\n    startTime: \"04/19/17 04:34:22 +0000\",\n    serverName: \"CyberDust.domain\",\n    processName: \"query_tests\",\n    instanceID: 1301,\n    Status: \"Completed\",\n    serverId: 6,\n    processId: 6,\n    status: \"Completed\"\n  }, {\n    startTime: \"05/23/17 04:34:22 +1200\",\n    serverName: \"NoNameServer\",\n    processName: \"transaction_checks\",\n    instanceID: 2002,\n    Status: \"Failed\",\n    serverId: 7,\n    processId: 7,\n    status: \"Completed\"\n  }, {\n    startTime: \"14/06/17 04:34:22 +0000\",\n    serverName: \"Perplexed\",\n    processName: \"rollback_execute\",\n    instanceID: 2302,\n    Status: \"Completed\",\n    serverId: 8,\n    processId: 8,\n    status: \"Completed\"\n  }, {\n    startTime: \"04/23/17 04:34:22 +1930\",\n    serverName: \"Grimlock.lantern\",\n    processName: \"deadlock_detect\",\n    instanceID: 2221,\n    Status: \"Completed\",\n    serverId: 9,\n    processId: 9,\n    status: \"Completed\"\n  }];\n  const [processes, setProcesses] = useState([]);\n  const tableHeadDetails = [\"Start Time\", \"Server Name\", \"Process Name\", \"Instance ID\", \"Status\", \"Action\", \"Details\"]; // Filters\n\n  const [filters, setFilters] = useState({\n    serverId: 0,\n    processId: 0,\n    processName: \"\",\n    serverName: \"\",\n    status: \"\"\n  });\n\n  const filterProcesses = (processId, serverId, processName, serverName, status) => {\n    setFilters({ ...filters,\n      processId: processId === \"\" ? 0 : parseInt(processId),\n      serverId: serverId === \"\" ? 0 : parseInt(serverId),\n      processName: processName === \"\" ? \"\" : processName,\n      serverName: serverName === \"\" ? \"\" : serverName,\n      status: status === \"\" ? \"\" : status\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/login\",\n      component: Login\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: \" RTB Dashboard \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StartProcess, {\n          details: details\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Filters, {\n          filterProcesses: filterProcesses,\n          processes: runningProcesses.concat(completedProcesses)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProcessTable, {\n          processes: runningProcesses.concat(completedProcesses),\n          running: true,\n          filters: filterProcesses,\n          details: tableHeadDetails\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Vx/G3IM5o11PApZzo5CB2/J6gTQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kashita/Desktop/DB/db_project/frontend/src/App.js"],"names":["useState","useEffect","BrowserRouter","Router","Route","Link","ProcessTable","Filters","StartProcess","Login","App","details","server","process","runningProcesses","startTime","serverName","processName","instanceID","Status","serverId","processId","status","completedProcesses","processes","setProcesses","tableHeadDetails","filters","setFilters","filterProcesses","parseInt","textAlign","concat"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n//import Table from \"react-bootstrap/Table\";\n\n// import TableRows from \"./components/TableRows\";\n// import TableHead from \"./components/TableHead\";\nimport ProcessTable from \"./components/ProcessTable\";\n\nimport Filters from \"./components/Filters\";\nimport StartProcess from \"./components/StartProcess\";\nimport Login from \"./Login\";\n\nfunction App() {\n  const details = [\n    {\n      server: \"scripts\",\n      process: [\"p1\", \"p2\", \"process1\"],\n    },\n    // {\n    //   server: \"server2\",\n    //   process: [\"p1\", \"p2\", \"p3\"],\n    // },\n    // {\n    //   server: \"server3\",\n    //   process: [\"p1\", \"p4\"],\n    // },\n  ];\n  const runningProcesses = [\n    {\n      startTime: \"04/19/17 04:34:22 +0000\",\n      serverName: \"CyberDust.internal\",\n      processName: \"query_tests\",\n      instanceID: 114,\n      Status: \"10\",\n      serverId: 1,\n      processId: 1,\n      status: \"Completed\",\n    },\n    {\n      startTime: \"05/23/17 04:34:22 +1200\",\n      serverName: \"Skynet.dedicated\",\n      processName: \"transaction_checks\",\n      instanceID: 4450,\n      Status: \"60\",\n      serverId: 2,\n      processId: 2,\n      status: \"Failed\",\n    },\n    {\n      startTime: \"14/06/17 04:34:22 +0000\",\n      serverName: \"Perplexed\",\n      processName: \"rollback_execute\",\n      instanceID: 8901,\n      Status: \"30\",\n      serverId: 3,\n      processId: 3,\n      status: \"In Progress\",\n    },\n    {\n      startTime: \"04/23/17 04:34:22 +1930\",\n      serverName: \"Grimlock.lantern\",\n      processName: \"deadlock_detect\",\n      instanceID: 1230,\n      Status: \"40\",\n      serverId: 4,\n      processId: 4,\n      status: \"Failed\",\n    },\n    {\n      startTime: \"04/23/17 04:34:22 +0800\",\n      serverName: \"CyberDust.internal\",\n      processName: \"data_parser\",\n      instanceID: 240,\n      Status: \"90\",\n      serverId: 5,\n      processId: 5,\n      status: \"Completed\",\n    },\n  ];\n\n  //fetched from database\n  const completedProcesses = [\n    {\n      startTime: \"04/19/17 04:34:22 +0000\",\n      serverName: \"CyberDust.domain\",\n      processName: \"query_tests\",\n      instanceID: 1301,\n      Status: \"Completed\",\n      serverId: 6,\n      processId: 6,\n      status: \"Completed\",\n    },\n    {\n      startTime: \"05/23/17 04:34:22 +1200\",\n      serverName: \"NoNameServer\",\n      processName: \"transaction_checks\",\n      instanceID: 2002,\n      Status: \"Failed\",\n      serverId: 7,\n      processId: 7,\n      status: \"Completed\",\n    },\n    {\n      startTime: \"14/06/17 04:34:22 +0000\",\n      serverName: \"Perplexed\",\n      processName: \"rollback_execute\",\n      instanceID: 2302,\n      Status: \"Completed\",\n      serverId: 8,\n      processId: 8,\n      status: \"Completed\",\n    },\n    {\n      startTime: \"04/23/17 04:34:22 +1930\",\n      serverName: \"Grimlock.lantern\",\n      processName: \"deadlock_detect\",\n      instanceID: 2221,\n      Status: \"Completed\",\n      serverId: 9,\n      processId: 9,\n      status: \"Completed\",\n    },\n  ];\n\n  const [processes, setProcesses] = useState([]);\n  const tableHeadDetails = [\n    \"Start Time\",\n    \"Server Name\",\n    \"Process Name\",\n    \"Instance ID\",\n    \"Status\",\n    \"Action\",\n    \"Details\",\n  ];\n  // Filters\n  const [filters, setFilters] = useState({\n    serverId: 0,\n    processId: 0,\n    processName: \"\",\n    serverName: \"\",\n    status: \"\",\n  });\n\n  const filterProcesses = (\n    processId,\n    serverId,\n    processName,\n    serverName,\n    status\n  ) => {\n    setFilters({\n      ...filters,\n      processId: processId === \"\" ? 0 : parseInt(processId),\n      serverId: serverId === \"\" ? 0 : parseInt(serverId),\n      processName: processName === \"\" ? \"\" : processName,\n      serverName: serverName === \"\" ? \"\" : serverName,\n      status: status === \"\" ? \"\" : status,\n    });\n  };\n\n  return (\n    <Router>\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/\">\n        <div className=\"container\">\n          <h1 style={{ textAlign: \"center\" }}> RTB Dashboard </h1>\n          <StartProcess details={details} />\n\n          <Filters\n            filterProcesses={filterProcesses}\n            processes={runningProcesses.concat(completedProcesses)}\n          />\n\n          <ProcessTable\n            processes={runningProcesses.concat(completedProcesses)}\n            running={true}\n            filters={filterProcesses}\n            details={tableHeadDetails}\n          />\n        </div>\n      </Route>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}