{"ast":null,"code":"import _slicedToArray from\"/Users/kashita/Desktop/dbfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Form,Button,Col}from\"react-bootstrap\";import axios from\"axios\";import authHeader from\"../auth.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StartProcess=function StartProcess(_ref){var processNames=_ref.processNames,serverNames=_ref.serverNames;var _useState=useState(\"Select Server\"),_useState2=_slicedToArray(_useState,2),server=_useState2[0],setServer=_useState2[1];var _useState3=useState(\"Select Process\"),_useState4=_slicedToArray(_useState3,2),process=_useState4[0],setProcess=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),displayProcess=_useState6[0],setDisplayProcess=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),ipAddress=_useState8[0],setIpAddress=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),port=_useState10[0],setPort=_useState10[1];var handleSelectServer=function handleSelectServer(e){setServer(e);var i=0;for(i=0;i<serverNames.length;i++){if(serverNames[i].serverName===e)break;}var selectedProcesses=[];for(var j=0;j<serverNames[i].processIds.length;j++){for(var k=0;k<processNames.length;k++){if(serverNames[i].processIds[j]===processNames[k]._id){var p=processNames[k].processName;// p = p.substring(0, p.length - 3);\nselectedProcesses.push(p);}}}setDisplayProcess(selectedProcesses);setIpAddress(serverNames[i].ipAddress);setPort(serverNames[i].port);};var handleSelectProcess=function handleSelectProcess(e){setProcess(e);};var onSubmit=function onSubmit(e){e.preventDefault();if(server===\"Select Server\"||process===\"Select Process\"){alert(\"Select a server and a process.\");return;}axios.post(\"http://localhost:4000/api/server/processes/start\",{pname:process,sip:ipAddress,port:port},{headers:authHeader()}).then(function(res){alert(\"Process started successfully.\");}).catch(function(err){alert(\"Failed to start process\");});setServer(\"Select Server\");setProcess(\"Select Process\");};return/*#__PURE__*/_jsx(\"div\",{className:\"form-container\",children:/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(Form.Row,{className:\"form\",children:[/*#__PURE__*/_jsxs(Form.Group,{as:Col,controlId:\"exampleForm.ControlSelect1\",children:[/*#__PURE__*/_jsx(Form.Label,{className:\"form-label\",children:\"Server Name\"}),/*#__PURE__*/_jsxs(Form.Control,{as:\"select\",onChange:function onChange(e){return handleSelectServer(e.target.value);},value:server,className:\"form-control\",children:[/*#__PURE__*/_jsx(\"option\",{}),serverNames&&serverNames.map(function(s){return/*#__PURE__*/_jsx(\"option\",{children:s.serverName});})]})]}),/*#__PURE__*/_jsxs(Form.Group,{as:Col,controlId:\"exampleForm.ControlSelect1\",children:[/*#__PURE__*/_jsx(Form.Label,{className:\"form-label\",children:\"Process Name\"}),/*#__PURE__*/_jsxs(Form.Control,{as:\"select\",onChange:function onChange(e){return handleSelectProcess(e.target.value);},value:process,className:\"form-control\",children:[/*#__PURE__*/_jsx(\"option\",{}),displayProcess&&displayProcess.map(function(p){return/*#__PURE__*/_jsxs(\"option\",{children:[\" \",p,\" \"]});})]})]})]}),/*#__PURE__*/_jsx(Button,{className:\"custom-btn-primary\",variant:\"primary\",onClick:onSubmit,children:\"Start\"})]})});};export default StartProcess;","map":{"version":3,"sources":["/Users/kashita/Desktop/dbfrontend/src/components/StartProcess.js"],"names":["React","useState","Form","Button","Col","axios","authHeader","StartProcess","processNames","serverNames","server","setServer","process","setProcess","displayProcess","setDisplayProcess","ipAddress","setIpAddress","port","setPort","handleSelectServer","e","i","length","serverName","selectedProcesses","j","processIds","k","_id","p","processName","push","handleSelectProcess","onSubmit","preventDefault","alert","post","pname","sip","headers","then","res","catch","err","target","value","map","s"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport authHeader from \"../auth.js\";\n\nconst StartProcess = ({ processNames, serverNames }) => {\n  const [server, setServer] = useState(\"Select Server\");\n  const [process, setProcess] = useState(\"Select Process\");\n\n  const [displayProcess, setDisplayProcess] = useState([]);\n  const [ipAddress, setIpAddress] = useState();\n  const [port, setPort] = useState();\n\n  const handleSelectServer = (e) => {\n    setServer(e);\n\n    let i = 0;\n    for (i = 0; i < serverNames.length; i++) {\n      if (serverNames[i].serverName === e) break;\n    }\n\n    let selectedProcesses = [];\n    for (let j = 0; j < serverNames[i].processIds.length; j++) {\n      for (let k = 0; k < processNames.length; k++) {\n        if (serverNames[i].processIds[j] === processNames[k]._id) {\n          let p = processNames[k].processName;\n          // p = p.substring(0, p.length - 3);\n          selectedProcesses.push(p);\n        }\n      }\n    }\n    setDisplayProcess(selectedProcesses);\n    setIpAddress(serverNames[i].ipAddress);\n    setPort(serverNames[i].port);\n  };\n\n  const handleSelectProcess = (e) => {\n    setProcess(e);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (server === \"Select Server\" || process === \"Select Process\") {\n      alert(\"Select a server and a process.\");\n      return;\n    }\n\n    axios\n      .post(\n        \"http://localhost:4000/api/server/processes/start\",\n        {\n          pname: process,\n          sip: ipAddress,\n          port: port,\n        },\n        {\n          headers: authHeader(),\n        }\n      )\n      .then((res) => {\n        alert(\"Process started successfully.\");\n      })\n      .catch((err) => {\n        alert(\"Failed to start process\");\n      });\n\n    setServer(\"Select Server\");\n    setProcess(\"Select Process\");\n  };\n\n  return (\n    <div className=\"form-container\">\n      <Form>\n        <Form.Row className=\"form\">\n          <Form.Group as={Col} controlId=\"exampleForm.ControlSelect1\">\n            <Form.Label className=\"form-label\">Server Name</Form.Label>\n            <Form.Control\n              as=\"select\"\n              onChange={(e) => handleSelectServer(e.target.value)}\n              value={server}\n              className=\"form-control\"\n            >\n              <option></option>\n              {serverNames &&\n                serverNames.map((s) => <option>{s.serverName}</option>)}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group as={Col} controlId=\"exampleForm.ControlSelect1\">\n            <Form.Label className=\"form-label\">Process Name</Form.Label>\n            <Form.Control\n              as=\"select\"\n              onChange={(e) => handleSelectProcess(e.target.value)}\n              value={process}\n              className=\"form-control\"\n            >\n              <option></option>\n              {displayProcess &&\n                displayProcess.map((p) => <option> {p} </option>)}\n            </Form.Control>\n          </Form.Group>\n        </Form.Row>\n        <Button\n          className=\"custom-btn-primary\"\n          variant=\"primary\"\n          onClick={onSubmit}\n        >\n          Start\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default StartProcess;\n"]},"metadata":{},"sourceType":"module"}