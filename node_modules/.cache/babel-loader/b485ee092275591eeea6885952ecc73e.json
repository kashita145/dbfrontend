{"ast":null,"code":"var _jsxFileName = \"/Users/kashita/Desktop/DB/db_project/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from \"axios\";\nimport Table from \"react-bootstrap/Table\";\nimport Dashboard from \"./components/Dashboard\"; // import Toast from \"react-bootstrap/Toast\";\n// import Header from \"./components/Header\";\n// import ProcessTable from \"./components/ProcessTable\";\n\nimport Footer from \"./components/Footer\"; // import Filters from \"./components/Filters\";\n\nimport TableRows from \"./components/TableRows\";\nimport TableHead from \"./components/TableHead\"; //import ProcessTable from \"./components/ProcessTable\";\n\nimport Filter from \"./components/Filter\"; // import StartProcess from \"./components/StartProcess\";\n// import Dashboard from \"./components/Dashboard\";\n\nimport Login from \"./components/Login\";\nimport authHeader from \"./auth.js\";\nimport MyNavbar from \"./components/MyNavbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const MAIN_SERVER = \"http://localhost:4000/\"; // const details = [\n  //   {\n  //     server: \"scripts\",\n  //     process: [\"p1\", \"p2\", \"process1\"],\n  //   },\n  // ];\n\n  const [processes, setProcesses] = useState([]);\n  const [processNames, setProcessNames] = useState([]);\n  const [serverNames, setServerNames] = useState([]); // const tableHeadDetails = [\n  //   \"Start Time\",\n  //   \"Server Name\",\n  //   \"Process Name\",\n  //   \"Instance ID\",\n  //   \"Status\",\n  //   \"Action\",\n  //   \"Details\",\n  // ];\n  // Filters\n\n  const [filters, setFilters] = useState({\n    serverId: 0,\n    processId: 0,\n    processName: \"\",\n    serverName: \"\",\n    status: \"\",\n    startDate: \"\",\n    endDate: \"\"\n  });\n\n  const filterProcesses = (processId, serverId, processName, serverName, status, startDate, endDate) => {\n    setFilters({ ...filters,\n      processId: processId === \"\" ? 0 : parseInt(processId),\n      serverId: serverId === \"\" ? 0 : parseInt(serverId),\n      processName: processName === \"\" ? \"\" : processName,\n      serverName: serverName === \"\" ? \"\" : serverName,\n      status: status === \"\" ? \"\" : status,\n      startDate: startDate === \"\" ? \"\" : startDate,\n      endDate: endDate === \"\" ? \"\" : endDate\n    });\n  }; // send stop request\n\n\n  const stopProcess = (serverId, osId) => {\n    console.log(serverId, osId);\n    const msg = {\n      osId: osId,\n      serverIp: serverId.ipAddress,\n      serverPort: serverId.port,\n      headers: {\n        \"Content-type\": \"application/json\",\n        mode: \"cors\"\n      }\n    };\n    axios.post(\"http://localhost:4000/api/server/processes/stop\", msg).then(res => {\n      console.log(res);\n    });\n  };\n\n  useEffect(() => {\n    axios.get(\"http://localhost:4000/api/server/processes/status\", {\n      headers: authHeader()\n    }).then(resp => {\n      setProcesses(resp.data);\n    }).catch(err => {\n      console.log(err);\n    });\n    const interval = setInterval(() => {\n      axios.get(\"http://localhost:4000/api/server/processes/status\", {\n        headers: authHeader()\n      }).then(resp => {\n        setProcesses(resp.data);\n        console.log(resp.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    }, 15 * 1000);\n    return () => clearInterval(interval);\n  }, []); //get request for all process names\n  //stored in processNames\n\n  useEffect(() => {\n    axios.get(\"http://localhost:4000/api/server/processes/processList\").then(resp => {\n      setProcessNames(resp.data);\n      console.log(resp.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); //get request for all server names\n  //stored in serverNames\n\n  useEffect(() => {\n    axios.get(\"http://localhost:4000/api/server/processes/serverList\").then(resp => {\n      setServerNames(resp.data);\n      console.log(resp.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/login\",\n      component: Login\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(MyNavbar, {\n          text: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-heading\",\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(Dashboard, {\n            filterProcesses: filterProcesses,\n            processes: processes,\n            processNames: processNames,\n            serverNames: serverNames,\n            filters: filters,\n            stopProcess: stopProcess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gxsqsocyjcTzK8YazIs0kN3DTns=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kashita/Desktop/DB/db_project/frontend/src/App.js"],"names":["useState","useEffect","BrowserRouter","Router","Route","Link","Switch","axios","Table","Dashboard","Footer","TableRows","TableHead","Filter","Login","authHeader","MyNavbar","App","MAIN_SERVER","processes","setProcesses","processNames","setProcessNames","serverNames","setServerNames","filters","setFilters","serverId","processId","processName","serverName","status","startDate","endDate","filterProcesses","parseInt","stopProcess","osId","console","log","msg","serverIp","ipAddress","serverPort","port","headers","mode","post","then","res","get","resp","data","catch","err","interval","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from \"axios\";\n\nimport Table from \"react-bootstrap/Table\";\nimport Dashboard from \"./components/Dashboard\";\n// import Toast from \"react-bootstrap/Toast\";\n// import Header from \"./components/Header\";\n// import ProcessTable from \"./components/ProcessTable\";\nimport Footer from \"./components/Footer\";\n// import Filters from \"./components/Filters\";\nimport TableRows from \"./components/TableRows\";\nimport TableHead from \"./components/TableHead\";\n//import ProcessTable from \"./components/ProcessTable\";\nimport Filter from \"./components/Filter\";\n// import StartProcess from \"./components/StartProcess\";\n// import Dashboard from \"./components/Dashboard\";\nimport Login from \"./components/Login\";\nimport authHeader from \"./auth.js\";\nimport MyNavbar from \"./components/MyNavbar\";\n\nfunction App() {\n  const MAIN_SERVER = \"http://localhost:4000/\";\n  // const details = [\n  //   {\n  //     server: \"scripts\",\n  //     process: [\"p1\", \"p2\", \"process1\"],\n  //   },\n  // ];\n\n  const [processes, setProcesses] = useState([]);\n  const [processNames, setProcessNames] = useState([]);\n  const [serverNames, setServerNames] = useState([]);\n\n  // const tableHeadDetails = [\n  //   \"Start Time\",\n  //   \"Server Name\",\n  //   \"Process Name\",\n  //   \"Instance ID\",\n  //   \"Status\",\n  //   \"Action\",\n  //   \"Details\",\n  // ];\n  // Filters\n\n  const [filters, setFilters] = useState({\n    serverId: 0,\n    processId: 0,\n    processName: \"\",\n    serverName: \"\",\n    status: \"\",\n    startDate: \"\",\n    endDate: \"\",\n  });\n\n  const filterProcesses = (\n    processId,\n    serverId,\n    processName,\n    serverName,\n    status,\n    startDate,\n    endDate\n  ) => {\n    setFilters({\n      ...filters,\n      processId: processId === \"\" ? 0 : parseInt(processId),\n      serverId: serverId === \"\" ? 0 : parseInt(serverId),\n      processName: processName === \"\" ? \"\" : processName,\n      serverName: serverName === \"\" ? \"\" : serverName,\n      status: status === \"\" ? \"\" : status,\n      startDate: startDate === \"\" ? \"\" : startDate,\n      endDate: endDate === \"\" ? \"\" : endDate,\n    });\n  };\n\n  // send stop request\n  const stopProcess = (serverId, osId) => {\n    console.log(serverId, osId);\n    const msg = {\n      osId: osId,\n      serverIp: serverId.ipAddress,\n      serverPort: serverId.port,\n\n      headers: {\n        \"Content-type\": \"application/json\",\n        mode: \"cors\",\n      },\n    };\n    axios\n      .post(\"http://localhost:4000/api/server/processes/stop\", msg)\n      .then((res) => {\n        console.log(res);\n      });\n  };\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:4000/api/server/processes/status\", {\n        headers: authHeader(),\n      })\n      .then((resp) => {\n        setProcesses(resp.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    const interval = setInterval(() => {\n      axios\n        .get(\"http://localhost:4000/api/server/processes/status\", {\n          headers: authHeader(),\n        })\n        .then((resp) => {\n          setProcesses(resp.data);\n          console.log(resp.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }, 15 * 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  //get request for all process names\n  //stored in processNames\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:4000/api/server/processes/processList\")\n      .then((resp) => {\n        setProcessNames(resp.data);\n        console.log(resp.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  //get request for all server names\n  //stored in serverNames\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:4000/api/server/processes/serverList\")\n      .then((resp) => {\n        setServerNames(resp.data);\n        console.log(resp.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <Router>\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/\" exact>\n        <div className=\"App\">\n          <MyNavbar text=\"Logout\" />\n          <div className=\"page-heading\">Dashboard</div>\n          <div className=\"container\">\n            <Dashboard\n              filterProcesses={filterProcesses}\n              processes={processes}\n              processNames={processNames}\n              serverNames={serverNames}\n              filters={filters}\n              stopProcess={stopProcess}\n            />\n\n            {/* <Filter\n              filterProcesses={filterProcesses}\n              processes={processes}\n              processNames={processNames}\n              serverNames={serverNames}\n            /> */}\n            {/* \n          <ProcessTable\n            processes={processes}\n            running={true}\n            filters={filterProcesses}\n            details={tableHeadDetails}\n          /> */}\n            {/* <div className=\"custom-container\">\n              <h3>Process Logs</h3>\n              <br />\n              <Table responsive hover className=\"text-center\">\n                <TableHead/>\n                <TableRows\n                  processes={processes}\n                  running={true}\n                  filters={filters}\n                  stopProcess={stopProcess}\n                />\n              </Table>\n            </div> */}\n          </div>\n          <Footer />\n        </div>\n      </Route>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}